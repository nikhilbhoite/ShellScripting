7. Conditional Statements

### If Statement

if [ $a -gt $b ]; then
  echo "$a is greater"
fi

Checks if a is greater than b.
If true, it executes the command inside.

### If-Else

if [ $a -gt $b ]; then
  echo "a > b"
else
  echo "b >= a"
fi
If a > b, prints "a > b".

Else (if a <= b), prints "b >= a".

3. If-Elif-Else

if [ $a -gt $b ]; then
  echo "a > b"
elif [ $a -lt $b ]; then
  echo "a < b"
else
  echo "a == b"
fi
Checks multiple conditions.

here is bash scipt from above example

#!/bin/bash

# Ask user for two numbers
echo "Enter first number (a):"
read a
echo "Enter second number (b):"
read b

echo ""
echo "Using if statement:"
if [ $a -gt $b ]; then
  echo "$a is greater than $b"
fi

echo ""
echo "Using if-else statement:"
if [ $a -gt $b ]; then
  echo "a > b"
else
  echo "b >= a"
fi

echo ""
echo "Using if-elif-else statement:"
if [ $a -gt $b ]; then
  echo "a > b"
elif [ $a -lt $b ]; then
  echo "a < b"
else
  echo "a == b"
fi


### Bash script example using if, elif, and else to check a student's grade:

#!/bin/bash

echo "Enter your score (0-100):"
read score

if [ $score -ge 90 ]; then
  echo "Grade: A"
elif [ $score -ge 80 ]; then
  echo "Grade: B"
elif [ $score -ge 70 ]; then
  echo "Grade: C"
elif [ $score -ge 60 ]; then
  echo "Grade: D"
else
  echo "Grade: F (Fail)"
fi


 How it works:
Checks the score using if, elif, and else.
Uses -ge (greater than or equal) to evaluate ranges.
Displays the corresponding letter grade.
Let me know if you'd like to add error checking (like if the input isn't a number)!
If a > b, prints "a > b".
Else if a < b, prints "a < b".
Else, they must be equal, so prints "a == b".

