9. Arrays in Shell
 Define and Access
 fruits=("apple" "banana" "cherry")
 echo ${fruits[0]}   # apple
 echo ${fruits[@]}   # all
 echo ${#fruits[@]}  # count
 Loop Through Array
 for item in "${fruits[@]}"
 do
 echo $item
 done


10. Case Statement (Switch-like)
 read -p "Enter a number: " num
 case $num in
 1) echo "One";;
 2) echo "Two";;
 *) echo "Unknown";;
 esac

11. Functions
 greet() {
 echo "Hello, $1"
 }
 greet "Ravi"
 â€¢
 $1, $2 are positional parameters

############################################################
#!/bin/bash

# --- 1. ARRAY Example ---
fruits=("apple" "banana" "cherry")

echo "First fruit: ${fruits[0]}"
echo "All fruits: ${fruits[@]}"
echo "Number of fruits: ${#fruits[@]}"

echo "Looping through fruits:"
for fruit in "${fruits[@]}"
do
  echo " - $fruit"
done

echo

# --- 2. CASE STATEMENT Example ---
read -p "Enter a number (1 or 2): " num

case $num in
  1) echo "You selected One";;
  2) echo "You selected Two";;
  *) echo "Unknown selection";;
esac

echo

# --- 3. FUNCTION Example ---
greet() {
  echo "Hello, $1!"
}

# Call the function with a name
greet "Ravi"
######################################################################

output

First fruit: apple
All fruits: apple banana cherry
Number of fruits: 3
Looping through fruits:
 - apple
 - banana
 - cherry

Enter a number (1 or 2): 1
You selected One

Hello, Ravi!

